@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@addTagHelper *, AuthoringTagHelpers

@model BarCejas.App.Areas.Admin.Models.NovedadesViewModel

@{
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    //Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = ViewBag.Title ;
}


<section class="single-page-header">
    <diV class="container-fluid">
        <div class="row">
            <div class="col-md-6">
                <ol class="breadcrumb header-bradcrumb">
                    <li class="btn-trans">
                        <a href="javascript:history.back()">
                            <i class="fas fa-solid fa-angle-left"></i>
                        </a>
                    </li>
                    <li class="spa-bag"><a asp-controller="ManagerNewness" asp-action="Index">Gestor</a></li>
                    <li class="spa-bag">-</li>
                    <li class="active spa-bag">Gestor de Novedad</li>
                </ol>
            </div>
        </div>
    </diV>


    <div class="container title-secon-header">
        <div class="row">
            <div class="col-md-12">
                <h4 class="title-secon">@ViewBag.Title</h4>

            </div>
        </div>
    </div>
</section>


<section class="company-mission section" style="padding-top: 68px!important;">
    <div class="container">
        @*asp-controller="ManagerNewness" asp-action="OnPostNovedades" data-ajax="true"
        data-ajax-failure="fnonFailedNewness" data-ajax-success="fnonSuccessNewness"*@
        <form enctype="multipart/form-data" id="NovedadesForm" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            @if (Model != null && Model.Id > 0)
            {
                <input asp-for="Id" type="hidden" />
                <input asp-for="IndHome" type="hidden" />
                <input asp-for="IndEstatus" type="hidden" />
                <input asp-for="RutaImagen" type="hidden" />

            }
            <div class="row">
                <div asp-validation-summary="ModelOnly"></div>
                <div class="form-group col-md-8 mb-8">
                    <label asp-for="Titulo">Titulo de la novedad</label>
                    <input type="text" class="form-control" asp-for="Titulo" placeholder="Nombre">
                    <span asp-validation-for="Titulo" class="text-danger"></span>
                </div>
                <div class="form-group col-md-4 mb-4">
                    <div asp-validation-summary="ModelOnly"></div>
                    <label asp-for="Fecha">Fecha</label>
                    <div class="md-form md-outline input-with-post-icon">
                        <input placeholder="DD/MM/AAAA" type="text" value="@(Model!=null ? Convert.ToDateTime(Model.Fecha).ToShortDateString():DateTime.Now.ToShortDateString())" asp-for="Fecha" class="form-control date">
                    </div>
                    <span asp-validation-for="Fecha" class="text-danger"></span>
                </div>
            </div>
            <div class="row">
                <div class="col-md-8">
                    
                        <div class="form-group">
                            <div asp-validation-summary="ModelOnly"></div>
                            <span asp-validation-for="Copete" class="text-danger"></span>
                            <label for="inputGenero">Copete</label>
                            <textarea class="form-control" asp-for="Copete" rows="5"></textarea>
                        </div>
                   
                </div>
                <div class="col-md-4">
                    <div class="row">
                        <div class="form-group col-md-12 mb-4">
                            <div asp-validation-summary="ModelOnly"></div>
                            <span asp-validation-for="Medio" class="text-danger"></span>
                            <label for="inputGenero">Medio <span class="optionalText">- opcional</span></label>
                            <input type="text" class="form-control" asp-for="Medio" placeholder="Medio en el que aparece originalmente">
                        </div>


                        <div class="form-group col-md-12 mb-4">
                            <div asp-validation-summary="ModelOnly"></div>
                            <span asp-validation-for="Link" class="text-danger"></span>
                            <label for="inputGenero">Link <span class="optionalText">- opcional</span></label>
                            <input type="text" class="form-control" asp-for="Link" placeholder="Link">
                        </div>

                         </div>
                </div>
            </div>
        
            <div class="row">
                <div class="form-group col-md-12 mb-8">
                    <div asp-validation-summary="ModelOnly"></div>
                    <span asp-validation-for="Contenido" id="editor_error" class="text-danger field-validation-valid"></span>
                    <label asp-for="Contenido">Contenido</label>
                    <textarea asp-for="Contenido" onchange="validateTxt()"></textarea>
                </div>

                <div class="form-group col-md-12 mb-4">
                    <div asp-validation-summary="ModelOnly"></div>
                    <span asp-validation-for="Archivo" class="text-danger"></span>
                    <label asp-for="Archivo">Imagen de tarjeta <span class="span-op">-opcional</span></label>
                    <div id="imagenPrevisualizacion" class="form-control-file customInputFile mx-auto p-5" style="background-image: url(@Url.Content(Model!= null && Model.RutaImagen != null ? Model.RutaImagen : string.Empty))">
                        <span> </span>
                        <input type="file" accept="image/jpg, image/png, image/jpeg" asp-for="Archivo" id="seleccionArchivos">
                    </div>


                </div>

            </div>
            <div class="row">
                <div class="form-group col-md-6 mb-4">
                    <a asp-controller="ManagerNewness" asp-action="Index" class="btn btn-main float-right">DESCARTAR</a>

                </div>
                <div class="form-group col-md-6 mb-4">

                    @if (Model != null && Model.Id > 0)
                    {
                        <button type="submit" class="btn btn-main-accion">EDITAR NOVEDAD</button>
                    }
                    else
                    {
                        <button type="submit" class="btn btn-main-accion">CREAR NOVEDAD</button>
                    }
                </div>
            </div>
        </form>
    </div>
</section>

@section scripts{
   
    @*<script src="~/lib/ckeditor/ckeditor.js"></script>*@

<script type="text/javascript">

        //ClassicEditor
        //    .create(document.querySelector('#editor'))
        //    .catch(error => {
        //        console.error(error);
        //    });

       var bodyEditor= CKEDITOR.replace('Contenido');
      
        function fnonSuccessNewness(Data) {

            if (Data.success) {

                ModalGeneral('@Url.Action("Index", "ManagerNewness")', Data.mensaje, Data.success);
               // ModalGeneral(Data.mensaje, 'Novedades');

                @*setTimeout(function () {
                    window.location.href = '@Url.Action("Index")';
                }, 6000);*@
            } else {
                ModalGeneral('', Data.mensaje, Data.success);
            }
        }

        function fnonFailedNewness(Data) {

            ModalGeneral('', Data.mensaje, false);

        }



        $(function () {
            $("#NovedadesForm").submit(function (e) {
                e.preventDefault();

               CKEDITOR.instances.Contenido.updateElement(); // La unica forma de que actualice el contenido al momento de editar
                var form = $(this);
                var formData = new FormData($('#NovedadesForm')[0]);
                if (form.valid() && validateTxt()) {
                    $.ajax({
                        type: 'post',
                        url: '@Url.Action("OnPostNovedades", "ManagerNewness")',
                        data: formData,
                        processData: false,
                        contentType: false
                    }).done(function (Data) {
                        if (Data.success) {
                            fnonSuccessNewness(Data);
                        }
                        else {
                            fnonFailedNewness(Data);
                        }
                    }).fail(function (XMLHttpRequest, textStatus, errorThrown)
                    {
                       
                        ModalGeneral('', errorThrown, false);
                    });
                } else {
                    return false;
                }

            });
        })

        function validateTxt() {
            var resultado_validacion = true;
            $("#editor_error").html("");
            var editor_val = $('#Contenido').val();
            if (!(editor_val.length > 0)) {
                $("#editor_error").html("Campo requerido.");
                resultado_validacion = false;
            }

            return resultado_validacion;
        }

        //Necesario para poder evaluar el cambio, despues de haber mostrar el mensaje de validacion
        bodyEditor.on('change', function () {
            CKEDITOR.instances.Contenido.updateElement();
            if (($('#Contenido').val().length > 0)) {
                $("#editor_error").html("");
            }
        });

</script>

}